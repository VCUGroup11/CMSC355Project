
import javax.swing.*;
import javax.swing.filechooser.FileFilter;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.io.File;
import java.nio.file.Files;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author shadowx
 */
class MainFrame extends javax.swing.JFrame {
    public static final StudentList students = new StudentList();
    private javax.swing.JComboBox jComboBox1;
    private javax.swing.JDialog jDialog1, jDialog2;
    private javax.swing.JFileChooser jFileChooser1;
    private StudentInfo studentInfo2;

    /**
     * Creates new form MainFrame
     */
    private MainFrame() {
        initializeList();
        initComponents();
        super.addWindowListener(new WindowAdapter() {
            @Override
            public void windowClosing(WindowEvent e) {
                closeList();
                super.windowClosing(e);
            }
        });
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
        } catch (Exception ex) {
            java.util.logging.Logger.getLogger(MainFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new MainFrame().setVisible(true));
    }

    private static void initializeList() {
        File f = new File(StudentList.DEFAULT_TEMPNAME);
        if (f.exists()) {
            int i = javax.swing.JOptionPane.showConfirmDialog(null,
                    "Unsaved data was found. Would you like to try and recover the data?",
                    "Restore unsaved data",
                    JOptionPane.YES_NO_OPTION);
            if (i == JOptionPane.YES_OPTION) {
                students.addAll(new StudentList(new File(StudentList.DEFAULT_TEMPNAME)));
            } else {
                deleteTempFiles();
            }
        } else {
            students.addAll(new StudentList(new File(StudentList.DEFAULT_FILENAME)));
        }
    }
    // End of variables declaration//GEN-END:variables

    private static void closeList() {
        //Ask if user wants to commit
        int i = javax.swing.JOptionPane.showConfirmDialog(null,
                "Would you like to save all changes permanently to the database? This cannot be undone",
                "Write Changes to Database",
                JOptionPane.YES_NO_OPTION);
        if (i == JOptionPane.YES_OPTION)
            students.saveInfoPermanently();

        //Clean up temp-files
        deleteTempFiles();
    }

    private static void deleteTempFiles() {
        try {
            Files.delete(new File(StudentList.DEFAULT_TEMPNAME).toPath());
        } catch (Exception e) {
            //doNothing
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jDialog1 = new javax.swing.JDialog();
        jDialog2 = new javax.swing.JDialog();
        jComboBox1 = new javax.swing.JComboBox();
        JButton jButton1 = new JButton();
        JButton jButton2 = new JButton();

        final FileFilter csv = new FileFilter() {
            @Override
            public boolean accept(File f) {
                return f.getName().endsWith("csv");
            }

            @Override
            public String getDescription() {
                return "Comma-separated value file";
            }
        };

        jFileChooser1 = new javax.swing.JFileChooser();
        jFileChooser1.setFileSelectionMode(JFileChooser.FILES_ONLY);
        jFileChooser1.setFileFilter(csv);

        JTabbedPane jTabbedPane1 = new JTabbedPane();
        studentInfo2 = new StudentInfo();
        AdvisingReport advingReport1 = new AdvisingReport();
        GradReport gradReport1 = new GradReport();
        JMenuBar jMenuBar1 = new JMenuBar();
        JMenu jMenu1 = new JMenu();
        JMenuItem jMenuItem1 = new JMenuItem();
        JMenuItem jMenuItem3 = new JMenuItem();
        JMenuItem jMenuItem2 = new JMenuItem();
        JMenuItem jMenuItem4 = new JMenuItem();
        JMenuItem jMenuItem5 = new JMenuItem();
        JMenuItem jMenuItem6 = new JMenuItem();

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(students.getNames()));

        jButton1.setText("Delete");
        jButton1.addActionListener(evt -> {
            students.deleteStudent((String) jComboBox1.getSelectedItem());
            jDialog1.setVisible(false);
            studentInfo2.loadList();
        });

        jButton2.setText("Export");
        jButton2.addActionListener(evt -> {
            StudentList ex = new StudentList();
            Student s = students.findStudent((String) jComboBox1.getSelectedItem());
            ex.add(s);
            int returnVal = jFileChooser1.showSaveDialog(null);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File f = jFileChooser1.getSelectedFile();
                if (!f.getAbsolutePath().endsWith(".csv") && jFileChooser1.getFileFilter().equals(csv)) {
                    f = new File(f.getAbsolutePath().concat(".csv"));
                }
                FileIO.writeFile(f.getPath(), ex);
            }
            jDialog2.setVisible(false);
            studentInfo2.loadList();
        });

        javax.swing.GroupLayout jDialog1Layout = new javax.swing.GroupLayout(jDialog1.getContentPane());
        jDialog1.getContentPane().setLayout(jDialog1Layout);
        jDialog1Layout.setHorizontalGroup(
                jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jDialog1Layout.createSequentialGroup()
                                .addGroup(jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jDialog1Layout.createSequentialGroup()
                                                .addGap(145, 145, 145)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jDialog1Layout.createSequentialGroup()
                                                .addGap(145, 145, 145)
                                                .addComponent(jButton1)))
                                .addContainerGap(175, Short.MAX_VALUE))
        );
        jDialog1Layout.setVerticalGroup(
                jDialog1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jDialog1Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton1)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout jDialog2Layout = new javax.swing.GroupLayout(jDialog2.getContentPane());
        jDialog2.getContentPane().setLayout(jDialog2Layout);
        jDialog2Layout.setHorizontalGroup(
                jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jDialog2Layout.createSequentialGroup()
                                .addGroup(jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(jDialog2Layout.createSequentialGroup()
                                                .addGap(145, 145, 145)
                                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addGroup(jDialog2Layout.createSequentialGroup()
                                                .addGap(145, 145, 145)
                                                .addComponent(jButton2)))
                                .addContainerGap(175, Short.MAX_VALUE))
        );
        jDialog2Layout.setVerticalGroup(
                jDialog2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jDialog2Layout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(18, 18, 18)
                                .addComponent(jButton2)
                                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jTabbedPane1.addTab("Student Information", studentInfo2);
        jTabbedPane1.addTab("Advising Report", advingReport1);
        jTabbedPane1.addTab("Graduation Application Report", gradReport1);

        jMenu1.setText("File");

        jMenuItem1.setText("Import Students");
        jMenuItem1.addActionListener(evt -> {
            jFileChooser1.setApproveButtonText("Import");
            int returnVal = jFileChooser1.showOpenDialog(null);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File f = jFileChooser1.getSelectedFile();
                students.addAll(FileIO.readFile(f));
            }
            students.saveInfo();
            studentInfo2.loadList();
        });
        jMenu1.add(jMenuItem1);

        jMenuItem3.setText("Export Students");
        jMenuItem3.addActionListener(evt -> {
            int returnVal = jFileChooser1.showSaveDialog(null);
            if (returnVal == JFileChooser.APPROVE_OPTION) {
                File f = jFileChooser1.getSelectedFile();
                if (!f.getAbsolutePath().endsWith(".csv") && jFileChooser1.getFileFilter().equals(csv)) {
                    f = new File(f.getAbsolutePath().concat(".csv"));
                }
                FileIO.writeFile(f.getPath(), students);
            }
            studentInfo2.loadList();
        });
        jMenu1.add(jMenuItem3);

        jMenuItem2.setText("Add Student");
        jMenuItem2.addActionListener(studentInfo2::jButton3ActionPerformed);
        jMenu1.add(jMenuItem2);

        jMenuItem4.setText("Remove Student");
        jMenuItem4.addActionListener(evt -> {
            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(students.getNames()));
            jDialog1.setBounds(100, 100, 400, 200);
            jDialog1.setVisible(true);
            students.saveInfo();
        });
        jMenu1.add(jMenuItem4);

        jMenuItem5.setText("Remove All Students");
        jMenuItem5.addActionListener(evt -> {
            students.clear();
            students.saveInfo();
            studentInfo2.loadList();
        });
        jMenu1.add(jMenuItem5);

        jMenuItem6.setText("Export Student");
        jMenuItem6.addActionListener(evt -> {
            jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(students.getNames()));
            jDialog2.setBounds(100, 100, 400, 200);
            jDialog2.setVisible(true);
            students.saveInfo();
        });
        jMenu1.add(jMenuItem6);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 595, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 379, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
}
